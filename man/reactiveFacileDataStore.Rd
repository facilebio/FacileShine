% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/reactiveFacileDataStore-module.R
\name{reactiveFacileDataStore}
\alias{reactiveFacileDataStore}
\alias{reactiveFacileDataStoreUI}
\alias{fds.ReactiveFacileDataStore}
\alias{active_samples.ReactiveFacileDataStore}
\alias{update_reactive_samples}
\alias{update_reactive_covariates}
\alias{update_reactive_datastore}
\title{Represents an active FacileDataStore used in the shiny context}
\usage{
reactiveFacileDataStore(input, output, session, dataset,
  active_samples = NULL, user = Sys.getenv("USER"), ...)

reactiveFacileDataStoreUI(id, ...)

\method{fds}{ReactiveFacileDataStore}(x, ...)

\method{active_samples}{ReactiveFacileDataStore}(x, ...)

update_reactive_samples(rfds, active_samples, criterion = NULL, ...)

update_reactive_covariates(rfds, covariates, namespace, ...)

update_reactive_datastore(rfds, dataset, active_samples = NULL, ...)
}
\arguments{
\item{dataset}{A (list of) FacileDataStore(s)}

\item{user}{a key to use for custom covariates}
}
\description{
In order to fully work, facile shiny modules simply require a FacileDataStore
and a sample descriptor that defines the "active" sampels under scrutiny.
}
\details{
This module will return a list (\code{rfds}) that includes:
\enumerate{
\item A non-reactive \code{FacileDataStore} (\code{rfds$fds})
\item A \code{$user} key for use when fetching "personal" covariates over samples,
using the \code{custom_key} parameter.
\item A reactive \code{active_samples} tibble (\code{rfds$active_samples}). This will
correspond to the same tibble returned from
\code{FacileData::active_samples(rfds$fds)}.
\item A reactive \code{active_covariates()} (long) tibble. This is a tibble
(or lazy query) that corresponds to a (perhaps superset) of covariates
that are defined over the \code{$active_samples()}.
\item A list of \code{$trigger$something()} functions that external modules can tickle to
update the state of the dataset. The \code{rfds$trigger$covariates()} function
may be pulled when a user provides custom covariates over the
active_samples via interacting with a plot.
}

Active samples and active covariates can be manipulated externally, ie. from
a user interacting with another module, using the \code{update_reactive_samples()}
and \code{update_reactive_covariates()} functions.
}
\section{Reactive Samples}{


A facile analysis session is perfomed on some subset of the samples
provided by a \code{FacileDataStore}. The samples under scrutiny can change as
the user dips into and out of different analyses. These are defined
interactively by the user via the use of the \code{facileSampleFilter} module(s)
}

\section{Reactive Covariates}{


Updates the temporal covariates during an analysis.

In addition to the sample covariates in the FacileDataStore, covariates
can be added to the samples by different modules via user interaction and
brushing during an analysis session.
}

